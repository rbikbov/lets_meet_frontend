---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/sessions":
    post:
      summary: Creates a session
      tags:
      - Sessions
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                "$ref": "#/components/schemas/access_token"
        '400':
          description: Bad request
          content:
            application/json:
              examples:
                example_1:
                  value:
                    message: Something went wrong, please try again
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  "$ref": "#/components/schemas/signin_request_data_user"
              required:
              - user
  "/api/v1/sessions/refresh":
    post:
      summary: Refresh session
      tags:
      - Sessions
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                "$ref": "#/components/schemas/access_token"
        '400':
          description: Bad request
          content:
            application/json:
              examples:
                example_1:
                  value:
                    message: Something went wrong. Please try again
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
              - token
  "/api/v1/sessions/logout":
    delete:
      summary: Delete session
      tags:
      - Sessions
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              examples:
                example_1:
                  value:
                    message: Something went wrong. Please try again
  "/api/v1/users":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples:
                example_1:
                  value:
                    message: You're registered successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    "$ref": "#/components/schemas/invalid_user"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  "$ref": "#/components/schemas/signup_request_data_user"
    get:
      summary: Return users list
      tags:
      - Users
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                type: object
                "$ref": "#/components/schemas/users_array"
  "/api/v1/users/:id":
    get:
      summary: Return user
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Found
          content:
            application/json:
              schema:
                type: object
                "$ref": "#/components/schemas/user"
        '400':
          description: Bad request
          content:
            application/json:
              examples:
                example_1:
                  value:
                    message: Something went wrong, please try again
  "/api/v1/users/:id/confirm_account":
    get:
      summary: Confirm account
      tags:
      - Users
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Found
          content:
            application/json:
              examples:
                example_1:
                  value:
                    message: Welcome to the Sample App! Your email has been confirmed
        '400':
          description: Bad request
          content:
            application/json:
              examples:
                example_1:
                  value:
                    message: Something went wrong, please try again
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    jwt_payload:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        admin:
          type: boolean
        salt:
          type: string
        expires_in:
          type: string
          format: date-time
      required:
      - id
      - email
      - admin
      - salt
      - expires_in
    signin_request_data_user:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
      required:
      - email
      - password
    signup_request_data_user:
      allOf:
      - "$ref": "#/components/schemas/signin_request_data_user"
      - type: object
        properties:
          password_confirmation:
            type: string
            format: password
        required:
        - password_confirmation
    user:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
          format: email
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
      - id
      - email
      - created_at
      - updated_at
    invalid_user:
      type: object
      properties:
        email:
          type: array
          items:
            type: string
        password:
          type: array
          items:
            type: string
    access_token:
      type: object
      properties:
        user_id:
          type: integer
        token:
          type: string
        expires_in:
          type: string
          format: date-time
        refresh:
          type: string
      required:
      - user_id
      - token
      - expires_in
      - refresh
    users_array:
      type: array
      items:
        "$ref": "#/components/schemas/user"
security:
- bearerAuth: []
